services:
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dev_db}
      POSTGRES_USER: ${POSTGRES_USER:-dev_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:

      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dev_user} -d ${POSTGRES_DB:-dev_db}"]
      interval: 10s
      timeout: 5s
      retries: 5


  app:
    container_name: organization-backend
    build:
      context: ./packages/organization-backend
      dockerfile: Dockerfile
    ports:
      - "80:${PORT:-8080}"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dev_db}
      POSTGRES_USER: ${POSTGRES_USER:-dev_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      DB_HOST: db
      PORT: ${PORT:-8080}
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    # Opcional: Montar volumen para desarrollo en vivo (hot-reload)
    # volumes:
    #   - ./src:/usr/src/app/src
    #   - /usr/src/app/node_modules
    # command: npm run dev

volumes:
  db-data:
    driver: local
services:
  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  app:
    image: ${DOCKERHUB_USERNAME}/organization-backend:latest
    ports:
      - "80:${PORT}"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: db
      PORT: ${PORT}
      NODE_ENV: production
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  ponder:
    image: ${DOCKERHUB_USERNAME}/ponder:latest
    container_name: ponder_indexer
    ports:
      - "${PONDER_PORT}:42069"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      PONDER_RPC_URL_84532: ${PONDER_RPC_URL_84532}
      NODE_ENV: production
    volumes:
      - ponder-cache:/.ponder
    command:
      - "npm"
      - "run"
      - "start"
      - "--"
      - "--schema"
      - "${DATABASE_SCHEMA}"
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

volumes:
  db-data:
    driver: local
  ponder-cache:
    driver: local
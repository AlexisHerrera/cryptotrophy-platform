{
  "address": "0xA316182D0e1C9aFd47B445570AfFd7341Ef8bB9B",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethPerClaim",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalFund",
          "type": "uint256"
        }
      ],
      "name": "RewardCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "secretHash",
          "type": "bytes32"
        }
      ],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "ethPerClaimInWei",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "secretHash",
          "type": "bytes32"
        }
      ],
      "name": "createReward",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllCampaignDetails",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "campaignId",
          "type": "uint256"
        }
      ],
      "name": "withdrawCampaignFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc57544bf7939be1fee0ba36156949f2277ed695ab7f912f36849e746dc48bd64",
  "receipt": {
    "to": null,
    "from": "0x6875548D549dB2D6D99B29E0BA6ea7f7C53739D1",
    "contractAddress": "0xA316182D0e1C9aFd47B445570AfFd7341Ef8bB9B",
    "transactionIndex": 28,
    "gasUsed": "778443",
    "logsBloom": "0x
    "blockHash": "0x05564f5b70d014239872a974292175949ec070c232bfe3a9aa5d860d76ab79c7",
    "transactionHash": "0xc57544bf7939be1fee0ba36156949f2277ed695ab7f912f36849e746dc48bd64",
    "logs": [],
    "blockNumber": 23789580,
    "cumulativeGasUsed": "6426165",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b3361ea27b8371165fdc23220f75eed7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethPerClaim\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalFund\",\"type\":\"uint256\"}],\"name\":\"RewardCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"ethPerClaimInWei\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secretHash\",\"type\":\"bytes32\"}],\"name\":\"createReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCampaignDetails\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"campaignId\",\"type\":\"uint256\"}],\"name\":\"withdrawCampaignFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Challenges/RewardSystem.sol\":\"RewardSystem\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Challenges/RewardSystem.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract RewardSystem {\\n    struct Campaign {\\n        string name;\\n        address owner;\\n        uint ethPerClaim; // Amount in wei\\n        bytes32 secretHash; // Almacena el hash del n\\u00famero secreto\\n        uint totalFund;\\n        bool exists; // Indica si la campa\\u00f1a existe\\n        mapping(address => bool) hasClaimed;\\n    }\\n\\n    mapping(uint => Campaign) private campaigns;\\n    uint[] private campaignIds;\\n    uint private nextCampaignId = 1;\\n\\n    // Evento emitido cuando se crea una recompensa\\n    event RewardCreated(\\n        uint campaignId,\\n        string name,\\n        address owner,\\n        uint ethPerClaim,\\n        uint totalFund\\n    );\\n\\n    // Evento emitido cuando se reclama una recompensa\\n    event RewardClaimed(uint campaignId, address claimer, uint amount);\\n\\n    // Crear una nueva campa\\u00f1a de recompensas\\n    function createReward(\\n        string memory name,\\n        uint ethPerClaimInWei,\\n        bytes32 secretHash\\n    ) public payable {\\n        require(msg.value > 0, \\\"Must fund campaign with ETH\\\");\\n        require(ethPerClaimInWei > 0, \\\"ETH per claim must be greater than zero\\\");\\n\\n        uint campaignId = nextCampaignId++;\\n        Campaign storage campaign = campaigns[campaignId];\\n\\n        campaign.exists = true;\\n        campaign.owner = msg.sender;\\n        campaign.name = name;\\n        campaign.ethPerClaim = ethPerClaimInWei;\\n        campaign.secretHash = secretHash;\\n        campaign.totalFund = msg.value;\\n\\n        campaignIds.push(campaignId);\\n\\n        emit RewardCreated(\\n            campaignId,\\n            name,\\n            msg.sender,\\n            ethPerClaimInWei,\\n            msg.value\\n        );\\n    }\\n\\n    // Reclamar una recompensa para una campa\\u00f1a espec\\u00edfica\\n    function claimReward(uint campaignId, bytes32 secretHash) public {\\n        Campaign storage campaign = campaigns[campaignId];\\n\\n        require(campaign.exists, \\\"Campaign does not exist\\\");\\n        require(\\n            campaign.secretHash == secretHash,\\n            \\\"Incorrect secret\\\"\\n        );\\n        require(!campaign.hasClaimed[msg.sender], \\\"Reward already claimed\\\");\\n        require(\\n            campaign.totalFund >= campaign.ethPerClaim,\\n            \\\"Insufficient campaign funds\\\"\\n        );\\n\\n        // Actualizar estado antes de transferir\\n        campaign.hasClaimed[msg.sender] = true;\\n        campaign.totalFund -= campaign.ethPerClaim;\\n\\n        payable(msg.sender).transfer(campaign.ethPerClaim);\\n\\n        emit RewardClaimed(campaignId, msg.sender, campaign.ethPerClaim);\\n    }\\n\\n    // Solo el propietario de la campa\\u00f1a puede retirar los fondos restantes\\n    function withdrawCampaignFunds(uint campaignId) public {\\n        Campaign storage campaign = campaigns[campaignId];\\n        require(campaign.exists, \\\"Campaign does not exist\\\");\\n        require(\\n            msg.sender == campaign.owner,\\n            \\\"Only the campaign owner can withdraw funds\\\"\\n        );\\n\\n        uint remainingFunds = campaign.totalFund;\\n        require(remainingFunds > 0, \\\"No funds to withdraw\\\");\\n\\n        // Actualizar estado antes de transferir\\n        campaign.totalFund = 0;\\n\\n        payable(msg.sender).transfer(remainingFunds);\\n    }\\n\\n    // Listar todas las campa\\u00f1as con detalles b\\u00e1sicos\\n    function getAllCampaignDetails() public view returns (\\n        uint[] memory,\\n        string[] memory,\\n        uint[] memory,\\n        uint[] memory\\n    ) {\\n        uint[] memory ids = new uint[](campaignIds.length);\\n        string[] memory names = new string[](campaignIds.length);\\n        uint[] memory ethPerClaims = new uint[](campaignIds.length);\\n        uint[] memory totalFunds = new uint[](campaignIds.length);\\n\\n        for (uint i = 0; i < campaignIds.length; i++) {\\n            uint id = campaignIds[i];\\n            Campaign storage campaign = campaigns[id];\\n            ids[i] = id;\\n            names[i] = campaign.name;\\n            ethPerClaims[i] = campaign.ethPerClaim;\\n            totalFunds[i] = campaign.totalFund;\\n        }\\n\\n        return (ids, names, ethPerClaims, totalFunds);\\n    }\\n}\\n\",\"keccak256\":\"0x860001f58599fead57ee6418240f575fef1e902dabb82bd1265aa244aea7cf7a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600160025534801561001557600080fd5b50610cb7806100256000396000f3fe60806040526004361061003f5760003560e01c806314169e2a1461004457806326a12d911461006657806395a41fe214610079578063eacd3ab3146100a7575b600080fd5b34801561005057600080fd5b5061006461005f36600461086b565b6100c7565b005b61006461007436600461089a565b61021a565b34801561008557600080fd5b5061008e6103af565b60405161009e94939291906109df565b60405180910390f35b3480156100b357600080fd5b506100646100c2366004610a79565b610661565b6000818152602081905260409020600581015460ff166101285760405162461bcd60e51b815260206004820152601760248201527610d85b5c185a59db88191bd95cc81b9bdd08195e1a5cdd604a1b60448201526064015b60405180910390fd5b60018101546001600160a01b031633146101975760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207468652063616d706169676e206f776e65722063616e2077697468604482015269647261772066756e647360b01b606482015260840161011f565b6004810154806101e05760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b604482015260640161011f565b600060048301819055604051339183156108fc02918491818181858888f19350505050158015610214573d6000803e3d6000fd5b50505050565b6000341161026a5760405162461bcd60e51b815260206004820152601b60248201527f4d7573742066756e642063616d706169676e2077697468204554480000000000604482015260640161011f565b600082116102ca5760405162461bcd60e51b815260206004820152602760248201527f4554482070657220636c61696d206d7573742062652067726561746572207468604482015266616e207a65726f60c81b606482015260840161011f565b60028054600091826102db83610ab1565b90915550600081815260208190526040902060058101805460ff19166001908117909155810180546001600160a01b031916331790559091508061031f8682610b53565b50600281018490556003810183905534600482018190556001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018390556040517f15df4952566f070d1c8e0e6992d40f253e208f82cf7d414235efb4627e82c16f916103a0918591899133918a91610c13565b60405180910390a15050505050565b606080606080600060018054905067ffffffffffffffff8111156103d5576103d5610884565b6040519080825280602002602001820160405280156103fe578160200160208202803683370190505b5060015490915060009067ffffffffffffffff81111561042057610420610884565b60405190808252806020026020018201604052801561045357816020015b606081526020019060019003908161043e5790505b5060015490915060009067ffffffffffffffff81111561047557610475610884565b60405190808252806020026020018201604052801561049e578160200160208202803683370190505b5060015490915060009067ffffffffffffffff8111156104c0576104c0610884565b6040519080825280602002602001820160405280156104e9578160200160208202803683370190505b50905060005b6001548110156106525760006001828154811061050e5761050e610c52565b90600052602060002001549050600080600083815260200190815260200160002090508187848151811061054457610544610c52565b60209081029190910101528054819061055c90610aca565b80601f016020809104026020016040519081016040528092919081815260200182805461058890610aca565b80156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b50505050508684815181106105ec576105ec610c52565b6020026020010181905250806002015485848151811061060e5761060e610c52565b602002602001018181525050806004015484848151811061063157610631610c52565b6020026020010181815250505050808061064a90610ab1565b9150506104ef565b50929791965094509092509050565b6000828152602081905260409020600581015460ff166106bd5760405162461bcd60e51b815260206004820152601760248201527610d85b5c185a59db88191bd95cc81b9bdd08195e1a5cdd604a1b604482015260640161011f565b818160030154146107035760405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd081cd958dc995d60821b604482015260640161011f565b33600090815260068201602052604090205460ff161561075e5760405162461bcd60e51b815260206004820152601660248201527514995dd85c9908185b1c9958591e4818db185a5b595960521b604482015260640161011f565b8060020154816004015410156107b65760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e742063616d706169676e2066756e64730000000000604482015260640161011f565b3360009081526006820160205260408120805460ff191660011790556002820154600483018054919290916107ec908490610c68565b90915550506002810154604051339180156108fc02916000818181858888f19350505050158015610821573d6000803e3d6000fd5b5060028101546040805185815233602082015280820192909252517f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb79181900360600190a1505050565b60006020828403121561087d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156108af57600080fd5b833567ffffffffffffffff808211156108c757600080fd5b818601915086601f8301126108db57600080fd5b8135818111156108ed576108ed610884565b604051601f8201601f19908116603f0116810190838211818310171561091557610915610884565b8160405282815289602084870101111561092e57600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b600081518084526020808501945080840160005b8381101561098e57815187529582019590820190600101610972565b509495945050505050565b6000815180845260005b818110156109bf576020818501810151868301820152016109a3565b506000602082860101526020601f19601f83011685010191505092915050565b6080815260006109f2608083018761095e565b6020838203818501528187518084528284019150828160051b850101838a0160005b83811015610a4257601f19878403018552610a30838351610999565b94860194925090850190600101610a14565b50508681036040880152610a56818a61095e565b9450505050508281036060840152610a6e818561095e565b979650505050505050565b60008060408385031215610a8c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600060018201610ac357610ac3610a9b565b5060010190565b600181811c90821680610ade57607f821691505b602082108103610afe57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b4e57600081815260208120601f850160051c81016020861015610b2b5750805b601f850160051c820191505b81811015610b4a57828155600101610b37565b5050505b505050565b815167ffffffffffffffff811115610b6d57610b6d610884565b610b8181610b7b8454610aca565b84610b04565b602080601f831160018114610bb65760008415610b9e5750858301515b600019600386901b1c1916600185901b178555610b4a565b600085815260208120601f198616915b82811015610be557888601518255948401946001909101908401610bc6565b5085821015610c035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b85815260a060208201526000610c2c60a0830187610999565b6001600160a01b0395909516604083015250606081019290925260809091015292915050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610c7b57610c7b610a9b565b9291505056fea26469706673582212207ea1659d69da33ec379109a2eda20e85c8c39d6b6ebcaeb3c0b00b206025b18164736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c806314169e2a1461004457806326a12d911461006657806395a41fe214610079578063eacd3ab3146100a7575b600080fd5b34801561005057600080fd5b5061006461005f36600461086b565b6100c7565b005b61006461007436600461089a565b61021a565b34801561008557600080fd5b5061008e6103af565b60405161009e94939291906109df565b60405180910390f35b3480156100b357600080fd5b506100646100c2366004610a79565b610661565b6000818152602081905260409020600581015460ff166101285760405162461bcd60e51b815260206004820152601760248201527610d85b5c185a59db88191bd95cc81b9bdd08195e1a5cdd604a1b60448201526064015b60405180910390fd5b60018101546001600160a01b031633146101975760405162461bcd60e51b815260206004820152602a60248201527f4f6e6c79207468652063616d706169676e206f776e65722063616e2077697468604482015269647261772066756e647360b01b606482015260840161011f565b6004810154806101e05760405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b604482015260640161011f565b600060048301819055604051339183156108fc02918491818181858888f19350505050158015610214573d6000803e3d6000fd5b50505050565b6000341161026a5760405162461bcd60e51b815260206004820152601b60248201527f4d7573742066756e642063616d706169676e2077697468204554480000000000604482015260640161011f565b600082116102ca5760405162461bcd60e51b815260206004820152602760248201527f4554482070657220636c61696d206d7573742062652067726561746572207468604482015266616e207a65726f60c81b606482015260840161011f565b60028054600091826102db83610ab1565b90915550600081815260208190526040902060058101805460ff19166001908117909155810180546001600160a01b031916331790559091508061031f8682610b53565b50600281018490556003810183905534600482018190556001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6018390556040517f15df4952566f070d1c8e0e6992d40f253e208f82cf7d414235efb4627e82c16f916103a0918591899133918a91610c13565b60405180910390a15050505050565b606080606080600060018054905067ffffffffffffffff8111156103d5576103d5610884565b6040519080825280602002602001820160405280156103fe578160200160208202803683370190505b5060015490915060009067ffffffffffffffff81111561042057610420610884565b60405190808252806020026020018201604052801561045357816020015b606081526020019060019003908161043e5790505b5060015490915060009067ffffffffffffffff81111561047557610475610884565b60405190808252806020026020018201604052801561049e578160200160208202803683370190505b5060015490915060009067ffffffffffffffff8111156104c0576104c0610884565b6040519080825280602002602001820160405280156104e9578160200160208202803683370190505b50905060005b6001548110156106525760006001828154811061050e5761050e610c52565b90600052602060002001549050600080600083815260200190815260200160002090508187848151811061054457610544610c52565b60209081029190910101528054819061055c90610aca565b80601f016020809104026020016040519081016040528092919081815260200182805461058890610aca565b80156105d55780601f106105aa576101008083540402835291602001916105d5565b820191906000526020600020905b8154815290600101906020018083116105b857829003601f168201915b50505050508684815181106105ec576105ec610c52565b6020026020010181905250806002015485848151811061060e5761060e610c52565b602002602001018181525050806004015484848151811061063157610631610c52565b6020026020010181815250505050808061064a90610ab1565b9150506104ef565b50929791965094509092509050565b6000828152602081905260409020600581015460ff166106bd5760405162461bcd60e51b815260206004820152601760248201527610d85b5c185a59db88191bd95cc81b9bdd08195e1a5cdd604a1b604482015260640161011f565b818160030154146107035760405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd081cd958dc995d60821b604482015260640161011f565b33600090815260068201602052604090205460ff161561075e5760405162461bcd60e51b815260206004820152601660248201527514995dd85c9908185b1c9958591e4818db185a5b595960521b604482015260640161011f565b8060020154816004015410156107b65760405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e742063616d706169676e2066756e64730000000000604482015260640161011f565b3360009081526006820160205260408120805460ff191660011790556002820154600483018054919290916107ec908490610c68565b90915550506002810154604051339180156108fc02916000818181858888f19350505050158015610821573d6000803e3d6000fd5b5060028101546040805185815233602082015280820192909252517f24b5efa61dd1cfc659205a97fb8ed868f3cb8c81922bab2b96423e5de1de2cb79181900360600190a1505050565b60006020828403121561087d57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156108af57600080fd5b833567ffffffffffffffff808211156108c757600080fd5b818601915086601f8301126108db57600080fd5b8135818111156108ed576108ed610884565b604051601f8201601f19908116603f0116810190838211818310171561091557610915610884565b8160405282815289602084870101111561092e57600080fd5b82602086016020830137600060208483010152809750505050505060208401359150604084013590509250925092565b600081518084526020808501945080840160005b8381101561098e57815187529582019590820190600101610972565b509495945050505050565b6000815180845260005b818110156109bf576020818501810151868301820152016109a3565b506000602082860101526020601f19601f83011685010191505092915050565b6080815260006109f2608083018761095e565b6020838203818501528187518084528284019150828160051b850101838a0160005b83811015610a4257601f19878403018552610a30838351610999565b94860194925090850190600101610a14565b50508681036040880152610a56818a61095e565b9450505050508281036060840152610a6e818561095e565b979650505050505050565b60008060408385031215610a8c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600060018201610ac357610ac3610a9b565b5060010190565b600181811c90821680610ade57607f821691505b602082108103610afe57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b4e57600081815260208120601f850160051c81016020861015610b2b5750805b601f850160051c820191505b81811015610b4a57828155600101610b37565b5050505b505050565b815167ffffffffffffffff811115610b6d57610b6d610884565b610b8181610b7b8454610aca565b84610b04565b602080601f831160018114610bb65760008415610b9e5750858301515b600019600386901b1c1916600185901b178555610b4a565b600085815260208120601f198616915b82811015610be557888601518255948401946001909101908401610bc6565b5085821015610c035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b85815260a060208201526000610c2c60a0830187610999565b6001600160a01b0395909516604083015250606081019290925260809091015292915050565b634e487b7160e01b600052603260045260246000fd5b81810381811115610c7b57610c7b610a9b565b9291505056fea26469706673582212207ea1659d69da33ec379109a2eda20e85c8c39d6b6ebcaeb3c0b00b206025b18164736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6140,
        "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
        "label": "campaigns",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Campaign)6135_storage)"
      },
      {
        "astId": 6143,
        "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
        "label": "campaignIds",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 6146,
        "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
        "label": "nextCampaignId",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(Campaign)6135_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct RewardSystem.Campaign)",
        "numberOfBytes": "32",
        "value": "t_struct(Campaign)6135_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Campaign)6135_storage": {
        "encoding": "inplace",
        "label": "struct RewardSystem.Campaign",
        "members": [
          {
            "astId": 6120,
            "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 6122,
            "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 6124,
            "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
            "label": "ethPerClaim",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 6126,
            "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
            "label": "secretHash",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32"
          },
          {
            "astId": 6128,
            "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
            "label": "totalFund",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 6130,
            "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
            "label": "exists",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 6134,
            "contract": "contracts/Challenges/RewardSystem.sol:RewardSystem",
            "label": "hasClaimed",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
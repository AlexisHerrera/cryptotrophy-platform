/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    ChainlinkVrfCoordinatorMock: {
      address: "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      abi: [
        {
          inputs: [
            {
              internalType: "uint96",
              name: "_baseFee",
              type: "uint96",
            },
            {
              internalType: "uint96",
              name: "_gasPrice",
              type: "uint96",
            },
            {
              internalType: "int256",
              name: "_weiPerUnitLink",
              type: "int256",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "internalBalance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "externalBalance",
              type: "uint256",
            },
          ],
          name: "BalanceInvariantViolated",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedToSendNative",
          type: "error",
        },
        {
          inputs: [],
          name: "FailedToTransferLink",
          type: "error",
        },
        {
          inputs: [],
          name: "IndexOutOfRange",
          type: "error",
        },
        {
          inputs: [],
          name: "InsufficientBalance",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidCalldata",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "consumer",
              type: "address",
            },
          ],
          name: "InvalidConsumer",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidExtraArgsTag",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidRandomWords",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidRequest",
          type: "error",
        },
        {
          inputs: [],
          name: "InvalidSubscription",
          type: "error",
        },
        {
          inputs: [],
          name: "LinkAlreadySet",
          type: "error",
        },
        {
          inputs: [],
          name: "LinkNotSet",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "proposedOwner",
              type: "address",
            },
          ],
          name: "MustBeRequestedOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "MustBeSubOwner",
          type: "error",
        },
        {
          inputs: [],
          name: "NotImplemented",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyCallableFromLink",
          type: "error",
        },
        {
          inputs: [],
          name: "PendingRequestExists",
          type: "error",
        },
        {
          inputs: [],
          name: "Reentrant",
          type: "error",
        },
        {
          inputs: [],
          name: "TooManyConsumers",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [],
          name: "ConfigSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "FundsRecovered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "NativeFundsRecovered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "outputSeed",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint96",
              name: "payment",
              type: "uint96",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "nativePayment",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "success",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "onlyPremium",
              type: "bool",
            },
          ],
          name: "RandomWordsFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "keyHash",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "preSeed",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint16",
              name: "minimumRequestConfirmations",
              type: "uint16",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "callbackGasLimit",
              type: "uint32",
            },
            {
              indexed: false,
              internalType: "uint32",
              name: "numWords",
              type: "uint32",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "extraArgs",
              type: "bytes",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "RandomWordsRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amountLink",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amountNative",
              type: "uint256",
            },
          ],
          name: "SubscriptionCanceled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "consumer",
              type: "address",
            },
          ],
          name: "SubscriptionConsumerAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "consumer",
              type: "address",
            },
          ],
          name: "SubscriptionConsumerRemoved",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "SubscriptionCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "oldBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newBalance",
              type: "uint256",
            },
          ],
          name: "SubscriptionFunded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "oldNativeBalance",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "newNativeBalance",
              type: "uint256",
            },
          ],
          name: "SubscriptionFundedWithNative",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "SubscriptionOwnerTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "SubscriptionOwnerTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "LINK",
          outputs: [
            {
              internalType: "contract LinkTokenInterface",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "LINK_NATIVE_FEED",
          outputs: [
            {
              internalType: "contract AggregatorV3Interface",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_CONSUMERS",
          outputs: [
            {
              internalType: "uint16",
              name: "",
              type: "uint16",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
          ],
          name: "acceptSubscriptionOwnerTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "consumer",
              type: "address",
            },
          ],
          name: "addConsumer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_subId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
          ],
          name: "cancelSubscription",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_subId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_consumer",
              type: "address",
            },
          ],
          name: "consumerIsAdded",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "createSubscription",
          outputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_requestId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_consumer",
              type: "address",
            },
          ],
          name: "fulfillRandomWords",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_requestId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_consumer",
              type: "address",
            },
            {
              internalType: "uint256[]",
              name: "_words",
              type: "uint256[]",
            },
          ],
          name: "fulfillRandomWordsWithOverride",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_subId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "fundSubscription",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
          ],
          name: "fundSubscriptionWithNative",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "startIndex",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxCount",
              type: "uint256",
            },
          ],
          name: "getActiveSubscriptionIds",
          outputs: [
            {
              internalType: "uint256[]",
              name: "ids",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
          ],
          name: "getSubscription",
          outputs: [
            {
              internalType: "uint96",
              name: "balance",
              type: "uint96",
            },
            {
              internalType: "uint96",
              name: "nativeBalance",
              type: "uint96",
            },
            {
              internalType: "uint64",
              name: "reqCount",
              type: "uint64",
            },
            {
              internalType: "address",
              name: "subOwner",
              type: "address",
            },
            {
              internalType: "address[]",
              name: "consumers",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_base_fee",
          outputs: [
            {
              internalType: "uint96",
              name: "",
              type: "uint96",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_gas_price",
          outputs: [
            {
              internalType: "uint96",
              name: "",
              type: "uint96",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "i_wei_per_unit_link",
          outputs: [
            {
              internalType: "int256",
              name: "",
              type: "int256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "onTokenTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
          ],
          name: "ownerCancelSubscription",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "pendingRequestExists",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "recoverFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "to",
              type: "address",
            },
          ],
          name: "recoverNativeFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_subId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_consumer",
              type: "address",
            },
          ],
          name: "removeConsumer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "bytes32",
                  name: "keyHash",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "subId",
                  type: "uint256",
                },
                {
                  internalType: "uint16",
                  name: "requestConfirmations",
                  type: "uint16",
                },
                {
                  internalType: "uint32",
                  name: "callbackGasLimit",
                  type: "uint32",
                },
                {
                  internalType: "uint32",
                  name: "numWords",
                  type: "uint32",
                },
                {
                  internalType: "bytes",
                  name: "extraArgs",
                  type: "bytes",
                },
              ],
              internalType: "struct VRFV2PlusClient.RandomWordsRequest",
              name: "_req",
              type: "tuple",
            },
          ],
          name: "requestRandomWords",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "requestSubscriptionOwnerTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_config",
          outputs: [
            {
              internalType: "uint16",
              name: "minimumRequestConfirmations",
              type: "uint16",
            },
            {
              internalType: "uint32",
              name: "maxGasLimit",
              type: "uint32",
            },
            {
              internalType: "bool",
              name: "reentrancyLock",
              type: "bool",
            },
            {
              internalType: "uint32",
              name: "stalenessSeconds",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "gasAfterPaymentCalculation",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "fulfillmentFlatFeeNativePPM",
              type: "uint32",
            },
            {
              internalType: "uint32",
              name: "fulfillmentFlatFeeLinkDiscountPPM",
              type: "uint32",
            },
            {
              internalType: "uint8",
              name: "nativePremiumPercentage",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "linkPremiumPercentage",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_currentSubNonce",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_totalBalance",
          outputs: [
            {
              internalType: "uint96",
              name: "",
              type: "uint96",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_totalNativeBalance",
          outputs: [
            {
              internalType: "uint96",
              name: "",
              type: "uint96",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "link",
              type: "address",
            },
            {
              internalType: "address",
              name: "linkNativeFeed",
              type: "address",
            },
          ],
          name: "setLINKAndLINKNativeFeed",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "recipient",
              type: "address",
            },
          ],
          name: "withdraw",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "recipient",
              type: "address",
            },
          ],
          name: "withdrawNative",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ChallengeManager: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_orgManagerAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          name: "ChallengeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          inputs: [],
          name: "challengeCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "challengeIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "challenges",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "validatorUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "validatorAddr",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "prizeAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxWinners",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "winnerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "claimReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_prizeAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxWinners",
              type: "uint256",
            },
          ],
          name: "createChallenge",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getChallengesByOrg",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
          ],
          name: "getOrganizationId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "ids",
              type: "uint256[]",
            },
          ],
          name: "listChallengesDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "retChallengeIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "prizeAmounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "startTimes",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "endTimes",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "maxWinners",
              type: "uint256[]",
            },
            {
              internalType: "bool[]",
              name: "actives",
              type: "bool[]",
            },
            {
              internalType: "uint256[]",
              name: "winnerCounts",
              type: "uint256[]",
            },
            {
              internalType: "bytes32[]",
              name: "validatorUID",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "orgChallenges",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_validatorAddr",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "setChallengeValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "tokensAvailable",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        createChallenge: "contracts/Challenges/IChallengeManager.sol",
        getOrganizationId: "contracts/Challenges/IChallengeManager.sol",
        setChallengeValidator: "contracts/Challenges/IChallengeManager.sol",
      },
    },
    Groth16Verifier: {
      address: "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "_pA",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[2][2]",
              name: "_pB",
              type: "uint256[2][2]",
            },
            {
              internalType: "uint256[2]",
              name: "_pC",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[1]",
              name: "_pubSignals",
              type: "uint256[1]",
            },
          ],
          name: "verifyProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    MockLinkToken: {
      address: "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "balances",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_address",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "setBalance",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "totalTokensIssued",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_value",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_data",
              type: "bytes",
            },
          ],
          name: "transferAndCall",
          outputs: [
            {
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    OffChainValidator: {
      address: "0x9A9f2CCfdE556A7E9Ff0848998Aa4a0CFD8863AE",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkCancelled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "claimState",
          outputs: [
            {
              internalType: "enum ITwoStepValidator.ValidationState",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "string",
              name: "apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "dataPath",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_requestId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "_completed",
              type: "bool",
            },
          ],
          name: "fulfill",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getValidationState",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "jobId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastCompleted",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastExecuted",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastUrl",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "link",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "oracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "preValidation",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "dataPath",
              type: "string",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validationRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claimState: "contracts/Validator/Support/TwoStepValidator.sol",
        getValidationState: "contracts/Validator/Support/TwoStepValidator.sol",
        lastRequestId: "contracts/Validator/Support/TwoStepValidator.sol",
        preValidation: "contracts/Validator/Support/TwoStepValidator.sol",
        validate: "contracts/Validator/Support/TwoStepValidator.sol",
        validationRequest: "contracts/Validator/Support/TwoStepValidator.sol",
        acceptOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
      },
    },
    OnChainCustomerBase: {
      address: "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_membershipId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_customer",
              type: "address",
            },
          ],
          name: "addCustomer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_membershipId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_admin",
              type: "address",
            },
          ],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_membershipId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_customer",
              type: "address",
            },
          ],
          name: "isCustomer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_membershipId",
              type: "uint256",
            },
          ],
          name: "joinMembership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_membershipId",
              type: "uint256",
            },
          ],
          name: "leaveMembership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "memberships",
          outputs: [
            {
              internalType: "address",
              name: "admin",
              type: "address",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_membershipId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_admin",
              type: "address",
            },
          ],
          name: "setAdmin",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        initialize: "contracts/Organization/ICustomerBase.sol",
        isCustomer: "contracts/Organization/ICustomerBase.sol",
      },
    },
    OnChainValidator: {
      address: "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_groth16Addr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "description",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "groth16Addr",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "publicHash",
              type: "uint256",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        validate: "contracts/Challenges/IValidator.sol",
      },
    },
    OracleMock: {
      address: "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "originalContract",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_requestId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "_completed",
              type: "bool",
            },
          ],
          name: "callFulfill",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "data",
              type: "bytes",
            },
          ],
          name: "onTokenTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    OrganizationManager: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "OrganizationCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_admin",
              type: "address",
            },
          ],
          name: "addAdmin",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_initialSupply",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_initialEthBacking",
              type: "uint256",
            },
            {
              internalType: "address[]",
              name: "_admins",
              type: "address[]",
            },
            {
              internalType: "bytes32",
              name: "_customerBaseUID",
              type: "bytes32",
            },
          ],
          name: "createOrganization",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "customerBaseRegistry",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getBalanceOfOrg",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getBalanceOfUser",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getOrganizationDetails",
          outputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "address[]",
              name: "admins",
              type: "address[]",
            },
            {
              internalType: "bytes32",
              name: "customerBaseUID",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "userIsAdmin",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "userIsMember",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getTokenOfOrg",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "hasUsers",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "isAdmin",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "isUser",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "listAdministratedOrganizations",
          outputs: [
            {
              internalType: "uint256[]",
              name: "orgIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "tokenSymbols",
              type: "string[]",
            },
            {
              internalType: "address[]",
              name: "tokenAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "adminCounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "customerCounts",
              type: "uint256[]",
            },
            {
              internalType: "bool[]",
              name: "isMembers",
              type: "bool[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "listOrganizations",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "listOrganizationsWithDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "orgIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "tokenSymbols",
              type: "string[]",
            },
            {
              internalType: "address[]",
              name: "tokenAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "adminCounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "customerCounts",
              type: "uint256[]",
            },
            {
              internalType: "bool[]",
              name: "isMembers",
              type: "bool[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "organizationIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "organizations",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "customerBaseUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "customerBaseAddr",
              type: "address",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_customerBaseUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "_customerBaseAddress",
              type: "address",
            },
          ],
          name: "registerCustomerBase",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_destAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferTokensTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        getBalanceOfOrg: "contracts/Organization/IOrganizationManager.sol",
        getBalanceOfUser: "contracts/Organization/IOrganizationManager.sol",
        getTokenOfOrg: "contracts/Organization/IOrganizationManager.sol",
        hasUsers: "contracts/Organization/IOrganizationManager.sol",
        isAdmin: "contracts/Organization/IOrganizationManager.sol",
        isUser: "contracts/Organization/IOrganizationManager.sol",
        transferTokensTo: "contracts/Organization/IOrganizationManager.sol",
      },
    },
    OrganizationToken: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "initialSupply",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "initialRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bool",
              name: "enabled",
              type: "bool",
            },
          ],
          name: "RedemptionEnabled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "TokensRedeemed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "burnFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentExchangeRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
          ],
          name: "redeemTokensForEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "redemptionEnabled",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        allowance: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        approve: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        decimals: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        name: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        symbol: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        totalSupply: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        transfer: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        burn: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        burnFrom: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
      },
    },
    Prizes: {
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "_orgManager",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "prizeId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "claimPrize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "stock",
              type: "uint256",
            },
          ],
          name: "createPrize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
          ],
          name: "listPrizes",
          outputs: [
            {
              internalType: "uint256[]",
              name: "ids",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "prices",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "stocks",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    RandomValidator: {
      address: "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subscriptionId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "vrfCoordinator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "keyHash",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "have",
              type: "address",
            },
            {
              internalType: "address",
              name: "want",
              type: "address",
            },
          ],
          name: "OnlyCoordinatorCanFulfill",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "have",
              type: "address",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "coordinator",
              type: "address",
            },
          ],
          name: "OnlyOwnerOrCoordinator",
          type: "error",
        },
        {
          inputs: [],
          name: "ZeroAddress",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "vrfCoordinator",
              type: "address",
            },
          ],
          name: "CoordinatorSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256[]",
              name: "randomWords",
              type: "uint256[]",
            },
          ],
          name: "ReturnedRandomness",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "claimState",
          outputs: [
            {
              internalType: "enum ITwoStepValidator.ValidationState",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getValidationState",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "preValidation",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "randomWords",
              type: "uint256[]",
            },
          ],
          name: "rawFulfillRandomWords",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_vrfCoordinator",
          outputs: [
            {
              internalType: "contract IVRFCoordinatorV2Plus",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "publicHash",
              type: "uint256",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_vrfCoordinator",
              type: "address",
            },
          ],
          name: "setCoordinator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validationRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claimState: "contracts/Validator/Support/TwoStepValidator.sol",
        getValidationState: "contracts/Validator/Support/TwoStepValidator.sol",
        lastRequestId: "contracts/Validator/Support/TwoStepValidator.sol",
        preValidation: "contracts/Validator/Support/TwoStepValidator.sol",
        validate: "contracts/Validator/Support/TwoStepValidator.sol",
        validationRequest: "contracts/Validator/Support/TwoStepValidator.sol",
        acceptOwnership: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        owner: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        rawFulfillRandomWords: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        s_vrfCoordinator: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        setCoordinator: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        transferOwnership: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
      },
    },
    RewardSystem: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethPerClaim",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalFund",
              type: "uint256",
            },
          ],
          name: "RewardCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "secretHash",
              type: "bytes32",
            },
          ],
          name: "claimReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "ethPerClaimInWei",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "secretHash",
              type: "bytes32",
            },
          ],
          name: "createReward",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllCampaignDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
          ],
          name: "withdrawCampaignFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ValidatorRegistry: {
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_organizationManagerAddr",
              type: "address",
            },
            {
              internalType: "address",
              name: "_challangeManagerAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "challangeManager",
          outputs: [
            {
              internalType: "contract IChallengeManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "organizationManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "_validatorAddress",
              type: "address",
            },
          ],
          name: "registerValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "setChallengeValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validators",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  84532: {
    ChallengeManager: {
      address: "0x8F2468BA4d45160802Db71fA6aCfcD7d583578BA",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_orgManagerAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "description",
              type: "string",
            },
          ],
          name: "ChallengeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          inputs: [],
          name: "challengeCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "challengeIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "challenges",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "validatorUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "validatorAddr",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "prizeAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxWinners",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "winnerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "claimReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_prizeAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxWinners",
              type: "uint256",
            },
          ],
          name: "createChallenge",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getChallengesByOrg",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
          ],
          name: "getOrganizationId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "ids",
              type: "uint256[]",
            },
          ],
          name: "listChallengesDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "retChallengeIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "prizeAmounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "startTimes",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "endTimes",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "maxWinners",
              type: "uint256[]",
            },
            {
              internalType: "bool[]",
              name: "actives",
              type: "bool[]",
            },
            {
              internalType: "uint256[]",
              name: "winnerCounts",
              type: "uint256[]",
            },
            {
              internalType: "bytes32[]",
              name: "validatorUID",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "orgChallenges",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_validatorAddr",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "setChallengeValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "tokensAvailable",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        createChallenge: "contracts/Challenges/IChallengeManager.sol",
        getOrganizationId: "contracts/Challenges/IChallengeManager.sol",
        setChallengeValidator: "contracts/Challenges/IChallengeManager.sol",
      },
    },
    Groth16Verifier: {
      address: "0x8d21f7C297798673e00EC6D1F8C9DB1F85B14AA6",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "_pA",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[2][2]",
              name: "_pB",
              type: "uint256[2][2]",
            },
            {
              internalType: "uint256[2]",
              name: "_pC",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[1]",
              name: "_pubSignals",
              type: "uint256[1]",
            },
          ],
          name: "verifyProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    OffChainValidator: {
      address: "0x5bece679e11dff6b70cBc7e086245E5906ACf05B",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkCancelled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "claimState",
          outputs: [
            {
              internalType: "enum ITwoStepValidator.ValidationState",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "string",
              name: "apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "dataPath",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_requestId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "_completed",
              type: "bool",
            },
          ],
          name: "fulfill",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getValidationState",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "jobId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastCompleted",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastExecuted",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastUrl",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "link",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "oracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "preValidation",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "dataPath",
              type: "string",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validationRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claimState: "contracts/Validator/Support/TwoStepValidator.sol",
        getValidationState: "contracts/Validator/Support/TwoStepValidator.sol",
        lastRequestId: "contracts/Validator/Support/TwoStepValidator.sol",
        preValidation: "contracts/Validator/Support/TwoStepValidator.sol",
        validate: "contracts/Validator/Support/TwoStepValidator.sol",
        validationRequest: "contracts/Validator/Support/TwoStepValidator.sol",
        acceptOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
      },
    },
    OnChainValidator: {
      address: "0xd5774d0F7128608Af3581Ed179aaB59626E612B2",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_groth16Addr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "description",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "groth16Addr",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "publicHash",
              type: "uint256",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        validate: "contracts/Challenges/IValidator.sol",
      },
    },
    OrganizationManager: {
      address: "0x3E02c8f6066e0A046EE9772ffd6E359dAD0745fB",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "token",
              type: "address",
            },
          ],
          name: "OrganizationCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_admin",
              type: "address",
            },
          ],
          name: "addAdmin",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "addUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_initialSupply",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_initialEthBacking",
              type: "uint256",
            },
            {
              internalType: "address[]",
              name: "_admins",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "_users",
              type: "address[]",
            },
          ],
          name: "createOrganization",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getBalanceOfOrg",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getBalanceOfUser",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getOrganizationDetails",
          outputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "address[]",
              name: "admins",
              type: "address[]",
            },
            {
              internalType: "address[]",
              name: "users",
              type: "address[]",
            },
            {
              internalType: "bool",
              name: "userIsAdmin",
              type: "bool",
            },
            {
              internalType: "bool",
              name: "userIsMember",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getTokenOfOrg",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "isAdmin",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "isMember",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "isUser",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "joinOrganization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "leaveOrganization",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "listOrganizations",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "listOrganizationsWithDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "orgIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "tokenSymbols",
              type: "string[]",
            },
            {
              internalType: "address[]",
              name: "tokenAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "adminCounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "userCounts",
              type: "uint256[]",
            },
            {
              internalType: "bool[]",
              name: "isMembers",
              type: "bool[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "organizationIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "organizations",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_destAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferTokensTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        getBalanceOfOrg: "contracts/Organization/IOrganizationManager.sol",
        getBalanceOfUser: "contracts/Organization/IOrganizationManager.sol",
        getTokenOfOrg: "contracts/Organization/IOrganizationManager.sol",
        hasUsers: "contracts/Organization/IOrganizationManager.sol",
        isAdmin: "contracts/Organization/IOrganizationManager.sol",
        isUser: "contracts/Organization/IOrganizationManager.sol",
        transferTokensTo: "contracts/Organization/IOrganizationManager.sol",
      },
    },
    OrganizationToken: {
      address: "0x7a0Daf7b7243EDF3381959aeCeBaF27210fDEf71",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "initialSupply",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "initialRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bool",
              name: "enabled",
              type: "bool",
            },
          ],
          name: "RedemptionEnabled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "TokensRedeemed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "burnFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentExchangeRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
          ],
          name: "redeemTokensForEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "redemptionEnabled",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        allowance: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        approve: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        balanceOf: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        decimals: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        name: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        symbol: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        totalSupply: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        transfer: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        transferFrom: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        burn: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        burnFrom: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
      },
    },
    Prizes: {
      address: "0x32Ce67E1301D594ee7fF2Ea2b8990e728aEC96D5",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "_orgManager",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "prizeId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "claimPrize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "stock",
              type: "uint256",
            },
          ],
          name: "createPrize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
          ],
          name: "listPrizes",
          outputs: [
            {
              internalType: "uint256[]",
              name: "ids",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "prices",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "stocks",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    RandomValidator: {
      address: "0xEc96D883B02cDFe149c95585036Ef605aF96DBA4",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "subscriptionId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "vrfCoordinator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "keyHash",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "have",
              type: "address",
            },
            {
              internalType: "address",
              name: "want",
              type: "address",
            },
          ],
          name: "OnlyCoordinatorCanFulfill",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "have",
              type: "address",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "coordinator",
              type: "address",
            },
          ],
          name: "OnlyOwnerOrCoordinator",
          type: "error",
        },
        {
          inputs: [],
          name: "ZeroAddress",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "vrfCoordinator",
              type: "address",
            },
          ],
          name: "CoordinatorSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256[]",
              name: "randomWords",
              type: "uint256[]",
            },
          ],
          name: "ReturnedRandomness",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "claimState",
          outputs: [
            {
              internalType: "enum ITwoStepValidator.ValidationState",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getValidationState",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "preValidation",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "randomWords",
              type: "uint256[]",
            },
          ],
          name: "rawFulfillRandomWords",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_vrfCoordinator",
          outputs: [
            {
              internalType: "contract IVRFCoordinatorV2Plus",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "publicHash",
              type: "uint256",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_vrfCoordinator",
              type: "address",
            },
          ],
          name: "setCoordinator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validationRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claimState: "contracts/Validator/Support/TwoStepValidator.sol",
        getValidationState: "contracts/Validator/Support/TwoStepValidator.sol",
        lastRequestId: "contracts/Validator/Support/TwoStepValidator.sol",
        preValidation: "contracts/Validator/Support/TwoStepValidator.sol",
        validate: "contracts/Validator/Support/TwoStepValidator.sol",
        validationRequest: "contracts/Validator/Support/TwoStepValidator.sol",
        acceptOwnership: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        owner: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        rawFulfillRandomWords: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        s_vrfCoordinator: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        setCoordinator: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        transferOwnership: "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
      },
    },
    RewardSystem: {
      address: "0xA316182D0e1C9aFd47B445570AfFd7341Ef8bB9B",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethPerClaim",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalFund",
              type: "uint256",
            },
          ],
          name: "RewardCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "secretHash",
              type: "bytes32",
            },
          ],
          name: "claimReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "ethPerClaimInWei",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "secretHash",
              type: "bytes32",
            },
          ],
          name: "createReward",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllCampaignDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
          ],
          name: "withdrawCampaignFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    ValidatorRegistry: {
      address: "0xfDCD6d77B625fc7AE253621A93B2aE88c19bb536",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_organizationManagerAddr",
              type: "address",
            },
            {
              internalType: "address",
              name: "_challangeManagerAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "challangeManager",
          outputs: [
            {
              internalType: "contract IChallengeManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "organizationManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "_validatorAddress",
              type: "address",
            },
          ],
          name: "registerValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "setChallengeValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validators",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;

/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  84532: {
    ChallengeManager: {
      address: "0x8e655949D4f93017e4B2fa6ded562AD0B73F6F20",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_orgManagerAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "maxWinners",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "prizeAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "active",
              type: "bool",
            },
          ],
          name: "ChallengeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "isActive",
              type: "bool",
            },
          ],
          name: "IsActiveChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "claimTime",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "prizeAmountInBaseUnits",
              type: "uint256",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "validatorUID",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "address",
              name: "validatorAddr",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "ValidatorChanged",
          type: "event",
        },
        {
          inputs: [],
          name: "challengeCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "challengeIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "challenges",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "bytes32",
              name: "validatorUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "validatorAddr",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "prizeAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "maxWinners",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "active",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "winnerCount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "claimReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_prizeAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxWinners",
              type: "uint256",
            },
          ],
          name: "createChallenge",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_prizeAmount",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_startTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_endTime",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_maxWinners",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "_validatorAddress",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "validatorParams",
              type: "bytes",
            },
          ],
          name: "createChallengeWithValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getChallengesByOrg",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
          ],
          name: "getOrganizationId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256[]",
              name: "ids",
              type: "uint256[]",
            },
          ],
          name: "listChallengesDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "retChallengeIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "prizeAmounts",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "startTimes",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "endTimes",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "maxWinners",
              type: "uint256[]",
            },
            {
              internalType: "bool[]",
              name: "actives",
              type: "bool[]",
            },
            {
              internalType: "uint256[]",
              name: "winnerCounts",
              type: "uint256[]",
            },
            {
              internalType: "bytes32[]",
              name: "validatorUID",
              type: "bytes32[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "orgChallenges",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_validatorAddr",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "setChallengeValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "tokensAvailable",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "validationChallenge",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_claimer",
              type: "address",
            },
          ],
          name: "validatorClaimCallback",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        createChallenge: "contracts/Challenges/IChallengeManager.sol",
        getOrganizationId: "contracts/Challenges/IChallengeManager.sol",
        setChallengeValidator: "contracts/Challenges/IChallengeManager.sol",
      },
      startBlock: 26529544,
    },
    Groth16Verifier: {
      address: "0x987cc9ed0A5b5CA52B004023628A39185454d1F9",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256[2]",
              name: "_pA",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[2][2]",
              name: "_pB",
              type: "uint256[2][2]",
            },
            {
              internalType: "uint256[2]",
              name: "_pC",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[1]",
              name: "_pubSignals",
              type: "uint256[1]",
            },
          ],
          name: "verifyProof",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      startBlock: 25733628,
    },
    OffChainApiValidator: {
      address: "0xAA7E6C77B7A4A4844a8999DB8bea4339FBe53dDB",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_router",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_donId",
              type: "bytes32",
            },
            {
              internalType: "string",
              name: "_source",
              type: "string",
            },
            {
              internalType: "uint64",
              name: "_subscriptionId",
              type: "uint64",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "EmptyArgs",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptySource",
          type: "error",
        },
        {
          inputs: [],
          name: "NoInlineSecrets",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyRouterCanFulfill",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "UnexpectedRequestID",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "OffChainApiValidatorCalled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "errorData",
              type: "bytes",
            },
          ],
          name: "OffChainApiValidatorError",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "response",
              type: "bytes32",
            },
          ],
          name: "OffChainApiValidatorFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestSent",
          type: "event",
        },
        {
          inputs: [],
          name: "MAX_CALLBACK_GAS",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "claims",
          outputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              internalType: "enum ITwoStepValidator.ValidationState",
              name: "state",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "string",
              name: "apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "dataPath",
              type: "string",
            },
            {
              internalType: "address",
              name: "callback",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "donId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getValidationState",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "handleOracleFulfillment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "preValidation",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "router",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "_dataPath",
              type: "string",
            },
            {
              internalType: "address",
              name: "_callback",
              type: "address",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "setConfigFromParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "source",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "subscriptionId",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validationRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claims: "contracts/Validator/Support/TwoStepValidator.sol",
        getValidationState: "contracts/Validator/Support/TwoStepValidator.sol",
        preValidation: "contracts/Validator/Support/TwoStepValidator.sol",
        setConfigFromParams: "contracts/Validator/Support/TwoStepValidator.sol",
        validate: "contracts/Validator/Support/TwoStepValidator.sol",
        validationRequest: "contracts/Validator/Support/TwoStepValidator.sol",
        handleOracleFulfillment:
          "@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol",
        acceptOwnership:
          "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership:
          "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
      },
      startBlock: 25791516,
    },
    OffChainValidator: {
      address: "0x9bb93CA5cBedE5258Fb4b12375BFC68E97749a8B",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_oracle",
              type: "address",
            },
            {
              internalType: "address",
              name: "_link",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkCancelled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "ChainlinkRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "OffChainRequestSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "claims",
          outputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              internalType: "enum ITwoStepValidator.ValidationState",
              name: "state",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "string",
              name: "apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "dataPath",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_requestId",
              type: "bytes32",
            },
            {
              internalType: "bool",
              name: "_completed",
              type: "bool",
            },
          ],
          name: "fulfill",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getValidationState",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "jobId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "link",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "oracle",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "preValidation",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "apiUrl",
              type: "string",
            },
            {
              internalType: "string",
              name: "dataPath",
              type: "string",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_params",
              type: "bytes",
            },
          ],
          name: "setConfigFromParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validationRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claims: "contracts/Validator/Support/TwoStepValidator.sol",
        getValidationState: "contracts/Validator/Support/TwoStepValidator.sol",
        preValidation: "contracts/Validator/Support/TwoStepValidator.sol",
        setConfigFromParams: "contracts/Validator/Support/TwoStepValidator.sol",
        validate: "contracts/Validator/Support/TwoStepValidator.sol",
        validationRequest: "contracts/Validator/Support/TwoStepValidator.sol",
        acceptOwnership:
          "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership:
          "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
      },
      startBlock: 25733650,
    },
    OnChainValidator: {
      address: "0x7A9a6b06D27e5cBD7D035F69b2dFDcaA9E62DDB4",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_groth16Addr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "description",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "groth16Addr",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "publicHash",
              type: "uint256",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "setConfigFromParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        setConfigFromParams: "contracts/Challenges/IValidator.sol",
        validate: "contracts/Challenges/IValidator.sol",
      },
      startBlock: 25733632,
    },
    OrganizationManager: {
      address: "0x81B08cAaae330edc7Ee4bBa9dc0Bcf89AFee894A",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "adminAddress",
              type: "address",
            },
          ],
          name: "OrganizationAdminAdded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseURI",
              type: "string",
            },
          ],
          name: "OrganizationCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "OrganizationFunded",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "OrganizationTokenMint",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_admin",
              type: "address",
            },
          ],
          name: "addAdmin",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_name",
              type: "string",
            },
            {
              internalType: "string",
              name: "_symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "_initialSupply",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_initialEthBacking",
              type: "uint256",
            },
            {
              internalType: "address[]",
              name: "_admins",
              type: "address[]",
            },
            {
              internalType: "string",
              name: "_baseURI",
              type: "string",
            },
          ],
          name: "createOrganization",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "fundOrganization",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getBalanceOfOrg",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getBalanceOfUser",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getOrganizationDetails",
          outputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "string",
              name: "tokenSymbol",
              type: "string",
            },
            {
              internalType: "address[]",
              name: "admins",
              type: "address[]",
            },
            {
              internalType: "bool",
              name: "userIsAdmin",
              type: "bool",
            },
            {
              internalType: "string",
              name: "baseURI",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
          ],
          name: "getTokenOfOrg",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "isAdmin",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "listAdministratedOrganizations",
          outputs: [
            {
              internalType: "uint256[]",
              name: "orgIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "tokenSymbols",
              type: "string[]",
            },
            {
              internalType: "address[]",
              name: "tokenAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "adminCounts",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "listOrganizations",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "listOrganizationsWithDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "orgIds",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "tokenSymbols",
              type: "string[]",
            },
            {
              internalType: "address[]",
              name: "tokenAddresses",
              type: "address[]",
            },
            {
              internalType: "uint256[]",
              name: "adminCounts",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "mintOrganizationToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "orgCount",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "orgNameExists",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "organizationIds",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "organizations",
          outputs: [
            {
              internalType: "uint256",
              name: "id",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "address",
              name: "token",
              type: "address",
            },
            {
              internalType: "string",
              name: "baseURI",
              type: "string",
            },
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          name: "tokenSymbolExists",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_orgId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_destAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_amount",
              type: "uint256",
            },
          ],
          name: "transferTokensTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        fundOrganization: "contracts/Organization/IOrganizationManager.sol",
        getBalanceOfOrg: "contracts/Organization/IOrganizationManager.sol",
        getBalanceOfUser: "contracts/Organization/IOrganizationManager.sol",
        getTokenOfOrg: "contracts/Organization/IOrganizationManager.sol",
        isAdmin: "contracts/Organization/IOrganizationManager.sol",
        mintOrganizationToken:
          "contracts/Organization/IOrganizationManager.sol",
        transferTokensTo: "contracts/Organization/IOrganizationManager.sol",
      },
      startBlock: 26529535,
    },
    OrganizationToken: {
      address: "0x598Cc27AdAdadFc53d194BD0593cA69c15c0BEBa",
      abi: [
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "symbol",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "initialSupply",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "initialRecipient",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "allowance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientAllowance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "balance",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "needed",
              type: "uint256",
            },
          ],
          name: "ERC20InsufficientBalance",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "approver",
              type: "address",
            },
          ],
          name: "ERC20InvalidApprover",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "receiver",
              type: "address",
            },
          ],
          name: "ERC20InvalidReceiver",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "ERC20InvalidSpender",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "ReentrancyGuardReentrantCall",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bool",
              name: "enabled",
              type: "bool",
            },
          ],
          name: "RedemptionEnabled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethAmount",
              type: "uint256",
            },
          ],
          name: "TokensRedeemed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
          ],
          name: "allowance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "approve",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "burnFrom",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "decimals",
          outputs: [
            {
              internalType: "uint8",
              name: "",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getBalance",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getCurrentExchangeRate",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "name",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "tokenAmount",
              type: "uint256",
            },
          ],
          name: "redeemTokensForEth",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "redemptionEnabled",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "symbol",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "totalSupply",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transfer",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "transferFrom",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        allowance:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        approve:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        balanceOf:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        decimals:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        name: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        symbol:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        totalSupply:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        transfer:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        transferFrom:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        burn: "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        burnFrom:
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
      },
      startBlock: 26529540,
    },
    Prizes: {
      address: "0x4D34fEC987e3728B06Bfe522F15d45eDfB9b879e",
      abi: [
        {
          inputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "_orgManager",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "prizeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "cost",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256[]",
              name: "nftIds",
              type: "uint256[]",
            },
          ],
          name: "PrizeClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "prizeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "stock",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "nftContract",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "baseURI",
              type: "string",
            },
          ],
          name: "PrizeCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "prizeId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "claimPrize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "string",
              name: "description",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "price",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "stock",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "baseURI",
              type: "string",
            },
          ],
          name: "createPrize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "prizeId",
              type: "uint256",
            },
          ],
          name: "getPrize",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "string",
                  name: "description",
                  type: "string",
                },
                {
                  internalType: "uint256",
                  name: "price",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "stock",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "orgId",
                  type: "uint256",
                },
                {
                  internalType: "address",
                  name: "nftContract",
                  type: "address",
                },
                {
                  internalType: "string",
                  name: "baseURI",
                  type: "string",
                },
              ],
              internalType: "struct Prizes.Prize",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "orgId",
              type: "uint256",
            },
          ],
          name: "listPrizes",
          outputs: [
            {
              internalType: "uint256[]",
              name: "ids",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "names",
              type: "string[]",
            },
            {
              internalType: "string[]",
              name: "descriptions",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "prices",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "stocks",
              type: "uint256[]",
            },
            {
              internalType: "address[]",
              name: "nftContracts",
              type: "address[]",
            },
            {
              internalType: "string[]",
              name: "baseURI",
              type: "string[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "orgManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        approve:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        balanceOf:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        getApproved:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        isApprovedForAll:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        name: "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        ownerOf:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        safeTransferFrom:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        setApprovalForAll:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        supportsInterface:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        symbol:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        tokenURI:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        transferFrom:
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
      startBlock: 26529547,
    },
    RandomValidator: {
      address: "0x3259F5341fdf96f6430862D8e3c066bA8696afD3",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_subscriptionId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_vrfCoordinator",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_keyHash",
              type: "bytes32",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "have",
              type: "address",
            },
            {
              internalType: "address",
              name: "want",
              type: "address",
            },
          ],
          name: "OnlyCoordinatorCanFulfill",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "have",
              type: "address",
            },
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              internalType: "address",
              name: "coordinator",
              type: "address",
            },
          ],
          name: "OnlyOwnerOrCoordinator",
          type: "error",
        },
        {
          inputs: [],
          name: "ZeroAddress",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "vrfCoordinator",
              type: "address",
            },
          ],
          name: "CoordinatorSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              indexed: true,
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
          ],
          name: "RandomValidatorCalled",
          type: "event",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "claims",
          outputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              internalType: "enum ITwoStepValidator.ValidationState",
              name: "state",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "configs",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
            {
              internalType: "uint256",
              name: "successProbability",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "callback",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "requiredPaymentWei",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getValidationState",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          name: "preValidation",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "requestId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "randomWords",
              type: "uint256[]",
            },
          ],
          name: "rawFulfillRandomWords",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_vrfCoordinator",
          outputs: [
            {
              internalType: "contract IVRFCoordinatorV2Plus",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_successProbability",
              type: "uint256",
            },
            {
              internalType: "address",
              name: "_callback",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "_requiredPayment",
              type: "uint256",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_params",
              type: "bytes",
            },
          ],
          name: "setConfigFromParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_vrfCoordinator",
              type: "address",
            },
          ],
          name: "setCoordinator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validationRequest",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {
        claims: "contracts/Validator/Support/TwoStepValidator.sol",
        getValidationState: "contracts/Validator/Support/TwoStepValidator.sol",
        preValidation: "contracts/Validator/Support/TwoStepValidator.sol",
        setConfigFromParams: "contracts/Validator/Support/TwoStepValidator.sol",
        validate: "contracts/Validator/Support/TwoStepValidator.sol",
        validationRequest: "contracts/Validator/Support/TwoStepValidator.sol",
        acceptOwnership:
          "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        owner:
          "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        rawFulfillRandomWords:
          "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        s_vrfCoordinator:
          "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        setCoordinator:
          "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
        transferOwnership:
          "@chainlink/contracts/src/v0.8/vrf/dev/VRFConsumerBaseV2Plus.sol",
      },
      startBlock: 25793187,
    },
    RewardSystem: {
      address: "0x92766997c4cC319E6608c956AEB7fa0bA4dFFd2c",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "claimer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "RewardClaimed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "ethPerClaim",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalFund",
              type: "uint256",
            },
          ],
          name: "RewardCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "secretHash",
              type: "bytes32",
            },
          ],
          name: "claimReward",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "uint256",
              name: "ethPerClaimInWei",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "secretHash",
              type: "bytes32",
            },
          ],
          name: "createReward",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllCampaignDetails",
          outputs: [
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "string[]",
              name: "",
              type: "string[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
            {
              internalType: "uint256[]",
              name: "",
              type: "uint256[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "campaignId",
              type: "uint256",
            },
          ],
          name: "withdrawCampaignFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      startBlock: 25733605,
    },
    SecretValidator: {
      address: "0xd4611842f1C6B9030aF92A30A8e859ED5DbE8acC",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_groth16Addr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "config",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "decodeParams",
          outputs: [
            {
              internalType: "uint256[2]",
              name: "_pA",
              type: "uint256[2]",
            },
            {
              internalType: "uint256[2][2]",
              name: "_pB",
              type: "uint256[2][2]",
            },
            {
              internalType: "uint256[2]",
              name: "_pC",
              type: "uint256[2]",
            },
            {
              internalType: "uint256",
              name: "publicHash",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "description",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "getAddressAsField",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
          ],
          name: "getConfig",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "publicHash",
              type: "uint256",
            },
          ],
          name: "getPublicSignals",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "groth16Addr",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "nonces",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "uint256[]",
              name: "_hashes",
              type: "uint256[]",
            },
          ],
          name: "setConfig",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "_params",
              type: "bytes",
            },
          ],
          name: "setConfigFromParams",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "usedHashes",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "validationId",
              type: "uint256",
            },
            {
              internalType: "bytes",
              name: "params",
              type: "bytes",
            },
          ],
          name: "validate",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        setConfigFromParams: "contracts/Challenges/IValidator.sol",
        validate: "contracts/Challenges/IValidator.sol",
      },
      startBlock: 26529556,
    },
    ValidatorRegistry: {
      address: "0x1c8B53Fd30C1E28F5D076F9B71529DF055e42464",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_organizationManagerAddr",
              type: "address",
            },
            {
              internalType: "address",
              name: "_challangeManagerAddr",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "challangeManager",
          outputs: [
            {
              internalType: "contract IChallengeManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "organizationManager",
          outputs: [
            {
              internalType: "contract IOrganizationManager",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "address",
              name: "_validatorAddress",
              type: "address",
            },
          ],
          name: "registerValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bytes32",
              name: "_validatorUID",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "_validationId",
              type: "uint256",
            },
          ],
          name: "setChallengeValidator",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          name: "validators",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      startBlock: 26529551,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
